{"version":3,"sources":["assets/background.jpg","styles/global.ts","components/Navbar/styles.tsx","components/Navbar/index.tsx","components/CurrencyBox/styles.tsx","components/CurrencyBox/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","BackgroundImage","Container","styled","div","Logo","Navbar","Select","select","Input","input","CurrencyBox","props","amount","allRates","onChangeAmount","selected","onChangeCurrency","onChangeCurrencyBox1","onChangeCurrencyBox2","type","className","value","onChange","map","currency","code","App","useState","rates","setRates","ratesUpdatedOn","setRatesUpdatedOn","amountBox1","setAmountBox1","amountBox2","setAmountBox2","currencyBox1","setCurrencyBox1","currencyBox2","setCurrencyBox2","roundNumber","number","parseFloat","toFixed","useEffect","localStorage","setItem","JSON","stringify","a","fetch","response","json","key","data","ratesArray","hasOwnProperty","push","unshift","base","Date","now","Error","getItem","storedData","parse","fetchRates","conversionCurrency","find","conversionRate","Number","conversionCurrency2","conversionRate2","converted","id","e","target","onClick","oldAmountBox1","oldCurrencyBox1","oldCurrencyBox2","aria-hidden","data-id","viewBox","height","width","fill","fillRule","d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f321509b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.35dffee0.jpg\";","import { createGlobalStyle } from 'styled-components';\nimport BackgroundImage from '../assets/background.jpg';\n \nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n \n  #root {\n    margin: 0 auto;\n  }\n \n  html {\n    background: url(${BackgroundImage}) no-repeat center center fixed; \n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    color: #ffffff;\n    font-family: 'Roboto', sans-serif;\n  }\n\n  body {\n    /* display: flex;\n    justify-content: center;\n    align-items: center; */\n  }\n\n  section {\n    text-align: center;\n    height: 90vh;\n    width: 100vw;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n\n  #converter {\n    background-color:rgba(0, 0, 0, 0.5);\n    padding: 25px 25px 20px;\n  }\n\n  #app-info{\n    margin-top: 30px;\n    color: #F1F1F1;\n  }\n\n  #equals {\n    font-weight: bold;\n  }\n`;","import styled from 'styled-components';\n \nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 10vh;\n  color: #F1F1F1;\n  background-color:rgba(0, 0, 0, 0.5);\n  width: 100vw;\n`;\nexport const Logo = styled.div`\n  margin-left: 30px;\n  font-size: 1.3em;\n`;","import React from 'react';\nimport { Container, Logo } from './styles';\n \nconst Navbar: React.FC = () => {\n  return (\n    <>\n      <Container>\n        <Logo>dth|CurrencyConverter</Logo>\n      </Container>\n    </>\n  );\n}\n \nexport default Navbar;","import styled from 'styled-components';\n \nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 70px;\n  color: #F1F1F1;\n  /* background-color: rgba(255, 255, 255, 0.5); */\n  margin: 10px;\n`;\n\nexport const Select = styled.select`\n  height: 100%;\n  background-color:rgba(0, 0, 0, 0.5);\n  color: #F1F1F1;\n  padding: 0 10px;\n  border: none;\n\n  -moz-appearance:none; /* Firefox */\n    -webkit-appearance:none; /* Safari and Chrome */\n    appearance:none;\n`;\n\nexport const Input = styled.input`\n  background-color:rgba(0, 0, 0, 0.5);\n  color: #F1F1F1;\n  height: 100%;\n  padding: 0 10px;\n  border: none;\n`;","import React from 'react';\nimport { Container, Select, Input } from './styles';\n\ninterface ICurrency {\n  code: string;\n  value: number | string;\n}\n\ninterface IProps {\n  amount: number;\n  allRates: ICurrency[] | undefined;\n  onChangeAmount(event: React.ChangeEvent<HTMLInputElement>): void;\n  onChangeCurrencyBox1?(event: React.ChangeEvent<HTMLSelectElement>): void;\n  onChangeCurrencyBox2?(event: React.ChangeEvent<HTMLSelectElement>): void;\n  selected: string;\n};\n\n// interface IProps {\n//   [key: string]: any;\n// };\n\nconst CurrencyBox: React.FC<IProps> = (props) => {\n  const {\n    amount,\n    allRates,\n    onChangeAmount,\n    selected\n  } = props;\n\n  const onChangeCurrency = props.onChangeCurrencyBox1 || props.onChangeCurrencyBox2;\n\n  return (\n    <>\n      <Container>\n        \n        <Input\n          type=\"number\"\n          className=\"input\"\n          value={amount}\n          onChange={onChangeAmount}\n        />\n\n        <Select value={selected} onChange={onChangeCurrency} >\n          {allRates && allRates.map((currency: ICurrency) => (\n            <option key={currency.code} value={currency.code}>\n              {currency.code}\n            </option>\n          ))}\n        </Select>\n      </Container>\n    </>\n  );\n}\n \nexport default CurrencyBox;","import React, { useEffect, useState } from 'react';\nimport GlobalStyle from './styles/global';\nimport Navbar from './components/Navbar';\nimport CurrencyBox from './components/CurrencyBox';\n\ninterface ICurrency {\n  code: string;\n  value: number;\n}\n \ninterface IStoredData {\n  rates: ICurrency[];\n  ratesUpdatedOn: number;\n}\n\nconst App: React.FC = () => {\n  const [rates, setRates] = useState<ICurrency[]>();\n  const [ratesUpdatedOn, setRatesUpdatedOn] = useState<number | null>(null);\n  const [amountBox1, setAmountBox1] = useState<number>(1)\n  const [amountBox2, setAmountBox2] = useState<number>(0)\n  const [currencyBox1, setCurrencyBox1] = useState<string>('EUR')\n  const [currencyBox2, setCurrencyBox2] = useState<string>('USD')\n\n  useEffect(() => {\n    if (ratesUpdatedOn) {\n      localStorage.setItem('dthCurrencyConverter', JSON.stringify({rates: rates, ratesUpdatedOn: ratesUpdatedOn}));\n    }\n  }, [rates, ratesUpdatedOn]);\n\n  // fetch rates\n  useEffect(() => {\n    async function fetchRates() {\n      try {\n        const response = await fetch(\n          'https://api.exchangeratesapi.io/latest'\n        );\n    \n        const data = await response.json();\n\n        const ratesArray: ICurrency[] = [];\n\n        for (let key in data.rates){\n          if(data.rates.hasOwnProperty(key)){\n            ratesArray.push({\n              code: key,\n              value: data.rates[key]\n            });\n          }\n        }\n        // the base currency is always the first value in the array\n        ratesArray.unshift({\n          code: data.base,\n          value: 1\n        });\n\n        setRates(ratesArray);\n        setRatesUpdatedOn(Date.now());\n      } catch(err) {\n        throw new Error(\"The rates service is temporarily unavailable. Please try later.\");\n      }\n    }\n\n    const data = localStorage.getItem('dthCurrencyConverter');\n    const storedData: IStoredData = data && JSON.parse(data);\n\n    // if there updated data in localstorage, do not call api\n    if (storedData && storedData.rates && storedData.ratesUpdatedOn) {\n      const timeElapsed = Date.now() - storedData.ratesUpdatedOn;\n      timeElapsed < 3600000\n        && setRates(storedData.rates)\n        && setRatesUpdatedOn(Date.now());\n      // if (timeElapsed < 3600000) {\n      //   setRates(storedData.rates)\n      //   setRatesUpdatedOn(Date.now());\n      // }\n    } else {\n      // call api\n      fetchRates();\n    }\n  }, []);\n\n  useEffect(() => {\n    // if the conversion is from BASE to X, just multiply value of base * the rate from currencyBox2\n    if (amountBox1 && currencyBox1 === 'EUR') {\n      const conversionCurrency = rates?.find(currency => currency.code === currencyBox2);\n      const conversionRate = conversionCurrency?.value || false;\n      conversionRate && setAmountBox2(roundNumber(amountBox1 * Number(conversionRate)));\n      return;\n    }\n\n    // if it's from X to BASE, USD value / USD rate\n    if (amountBox1 && currencyBox2 === 'EUR') {\n      const conversionCurrency = rates?.find(currency => currency.code === currencyBox1);\n      const conversionRate = conversionCurrency?.value || false;\n      conversionRate && setAmountBox2(roundNumber(amountBox1 / Number(conversionRate)));\n      return;\n    }\n\n    // if neither currency is base\n    if (amountBox1 && currencyBox1 !== 'EUR' && currencyBox2 !== 'EUR') {\n      const conversionCurrency = rates?.find(currency => currency.code === currencyBox1);\n      const conversionRate = conversionCurrency?.value || false;\n      const base = amountBox1 / Number(conversionRate) \n\n      const conversionCurrency2 = rates?.find(currency => currency.code === currencyBox2);\n      const conversionRate2 = conversionCurrency2?.value || false;\n      const converted = base * Number(conversionRate2);\n      \n      conversionRate && setAmountBox2(roundNumber(converted));\n\n      return;\n    }\n  }, [currencyBox1, amountBox1, currencyBox2, amountBox2, rates]);\n  \n  function handleAmountChangeBox1(e: React.ChangeEvent<HTMLInputElement>) {\n    setAmountBox1(parseFloat(e.target.value));\n  }\n\n  function handleAmountChangeBox2(e: React.ChangeEvent<HTMLInputElement>) {\n    setAmountBox2(parseFloat(e.target.value));\n  }\n\n  function handleCurrencyChangeBox1(e: React.ChangeEvent<HTMLSelectElement>) {\n    setCurrencyBox1(e.target.value);\n  }\n\n  function handleCurrencyChangeBox2(e: React.ChangeEvent<HTMLSelectElement>) {\n    setCurrencyBox2(e.target.value);\n  }\n\n  function handleToggleValues() {\n    const oldAmountBox1 = amountBox1;\n    const oldAmountBox2 = amountBox2;\n    const oldCurrencyBox1 = currencyBox1;\n    const oldCurrencyBox2 = currencyBox2;\n\n    setAmountBox1(oldAmountBox2);\n    setAmountBox2(oldAmountBox1);\n    setCurrencyBox1(oldCurrencyBox2);\n    setCurrencyBox2(oldCurrencyBox1);\n  }\n\n  function roundNumber(number: number) {\n    return parseFloat(number.toFixed(4));\n  }\n\n  return (\n    <>\n      <GlobalStyle />\n      <Navbar />\n      <section>\n        <div id=\"converter\">\n          <CurrencyBox\n            amount={amountBox1}\n            allRates={rates}\n            onChangeAmount={handleAmountChangeBox1}\n            onChangeCurrencyBox1={handleCurrencyChangeBox1}\n            selected={currencyBox1}\n          />\n\n          <button onClick={handleToggleValues}>\n            <svg aria-hidden=\"true\" data-id=\"icon-exchange\" viewBox=\"0 0 50 47\" height=\"32px\" width=\"30px\"><path fill=\"currentColor\" fillRule=\"evenodd\" d=\"M49.897 35.977L26.597 25v7.874H7.144v6.207h19.455v7.874zM.103 11.642l23.3 10.977v-7.874h19.454V8.538H23.402V.664z\"></path></svg>\n          </button>\n\n          <CurrencyBox\n            amount={amountBox2}\n            allRates={rates}\n            onChangeAmount={handleAmountChangeBox2}\n            onChangeCurrencyBox2={handleCurrencyChangeBox2}\n            selected={currencyBox2}\n          />\n\n          <div id=\"app-info\">\n            <p>Source: European Central Bank</p>\n            <p>This app is updated hourly.</p>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}